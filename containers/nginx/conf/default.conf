server {
	# Listen on HTTP port on both IPv4 and IPv6
	listen			80;
	listen			[::]:80;

	# Listen on HTTPS port and use SSL on both IPv4 and IPv6
	listen			443 ssl http2;
	listen			[::]:443 ssl http2;

	server_name		default;

	# Specify the SSL/TLS protocols allowed for HTTPS connections.
	ssl_protocols			TLSv1.2 TLSv1.3;

	# Specify the SSL key and certificate for HTTPS
	ssl_certificate			/etc/nginx/ssl/ssl.crt;
	ssl_certificate_key		/etc/nginx/ssl/ssl.key;

	# Redirect HTTP requests to HTTPS
	if ($scheme != "https") {
		return 301 https://$host$request_uri;
	}

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;

	# Define the root directory for serving web content.
	root		/www;
	index		index.html;

    # serve matched assets and push for caching
    location /assets {
        try_files $uri $uri/ =404;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Serve index.html for any location and aggressively prevent caching for it
	location / {
        try_files $uri /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
	}

    # Disable directory listings
    autoindex off;

	# Compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 1000;
    gzip_proxied any;

	# Access log
    access_log /var/log/nginx/access.log;

    # Error log
    error_log /var/log/nginx/error.log warn;
}